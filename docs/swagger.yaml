basePath: /
definitions:
  model.CreatePersonRequest:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
  model.Person:
    properties:
      age:
        type: integer
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  model.UpdatePersonRequest:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API для работы с информацией о людях (создание, чтение, обновление,
    удаление)
  title: People Info API
  version: "1.0"
paths:
  /person:
    get:
      description: Возвращает список всех сохранённых людей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Person'
            type: array
        "500":
          description: failed to get persons
          schema:
            type: string
      summary: Получение всех людей
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Создаёт нового человека и обогащает его данными через внешние API
      parameters:
      - description: Данные человека
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: invalid JSON
          schema:
            type: string
        "500":
          description: failed to create person
          schema:
            type: string
      summary: Создание человека
      tags:
      - persons
  /person/{id}:
    delete:
      description: Удаляет человека по ID
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: no content
          schema:
            type: string
        "400":
          description: invalid ID
          schema:
            type: string
        "500":
          description: failed to delete
          schema:
            type: string
      summary: Удаление человека
      tags:
      - persons
    get:
      description: Возвращает данные конкретного человека
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: invalid ID
          schema:
            type: string
        "404":
          description: person not found
          schema:
            type: string
      summary: Получение человека по ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Обновляет существующего человека по ID
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: invalid ID or JSON
          schema:
            type: string
        "500":
          description: failed to update
          schema:
            type: string
      summary: Обновление человека
      tags:
      - persons
swagger: "2.0"
